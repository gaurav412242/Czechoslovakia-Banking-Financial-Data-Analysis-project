--KEY PERFORMANCE INDICATORS KPI 

--1. What is the demographic profile of the bank's clients and how does it vary across districts?
SELECT C.* , D.* FROM CLIENT C INNER JOIN DISTRICT D 
ON C.DISTRICT_ID = D.DISTRICT_CODE ORDER BY CLIENT_ID  ;

CREATE OR REPLACE TABLE  DEMOGRAPHIC_KPI AS 
SELECT C.DISTRICT_ID , D.DISTRICT_NAME , D.AVERAGE_SALARY ,ROUND(AVG(C.AGE),0) AS AVG_AGE, SUM(CASE WHEN GENDER = 'Male' THEN 1 ELSE 0 END ) AS MALE_CLIENT , SUM(CASE WHEN GENDER = 'Female' THEN 1 ELSE 0 END ) AS FEMALE_CLIENT ,
ROUND((FEMALE_CLIENT/MALE_CLIENT)*100,2) AS FEMALE_PER_MALE_RATIO , COUNT(*) AS TOTAL_CLIENT 
FROM CLIENT C INNER JOIN DISTRICT D ON C.DISTRICT_ID = D.DISTRICT_CODE 
GROUP BY 1,2,3
ORDER BY 1 ;

SELECT * FROM DEMOGRAPHIC_KPI;
ORDER BY FEMALE_PER_MALE_RATIO DESC ;

SELECT * FROM DEMOGRAPHIC_KPI
ORDER BY AVERAGE_SALARY DESC;

SELECT AVG(AVERAGE_SALARY) FROM DEMOGRAPHIC_KPI; -- THE AVERAGE SALARY OF ALL THE DISTRICTS ARE 9.03 K

SELECT AVG(AVG_AGE) FROM DEMOGRAPHIC_KPI; -- THE AVERAGE AGE OF THE BANK CLIENTS ARE 43YEARS 

SELECT SUM(TOTAL_CLIENT) FROM DEMOGRAPHIC_KPI; --THE BANK HAS TOTAL OF 5369 CLIENTS . 

SELECT DISTRICT_NAME ,  TOTAL_CLIENT FROM DEMOGRAPHIC_KPI
ORDER BY 2 DESC 
LIMIT 3 ;  -- TOP DISTRTCTS WITH MAXIMUM CLIENTS ARE HL.M.PRAHA WITH 663 CLIENTS , OSTRAVA-MESTO WITH 180 CLIENTS AND KARVINA WITH 269 CLIENTS ,

SELECT DISTRICT_NAME ,FEMALE_PER_MALE_RATIO FROM DEMOGRAPHIC_KPI 
ORDER BY 2 DESC ;



--2 what is the male and female ratio inside a bank . 

SELECT GENDER , COUNT(GENDER) AS COUNT_OF_GENDER   FROM CLIENT 
GROUP BY 1 
ORDER BY 2 DESC ;

SELECT * FROM CLIENT LIMIT  1 ;

SELECT 
SUM(CASE WHEN GENDER = 'Male' THEN 1 ELSE 0 END)/COUNT(*)*100.0 AS MALE_PERC ,
SUM(CASE WHEN GENDER = 'Female' THEN 1 ELSE 0 END)/COUNT(*)*100.0 AS FEMALE_PERC 
FROM CLIENT ;

--3How the banks have performed over the years. Give their detailed analysis year & month-wise.
--

CREATE OR REPLACE TABLE ACC_LATEST_TXNS_WITH_BALANCE 
AS
SELECT LTD.*,TXN.BALANCE
FROM TRANSACTION AS TXN
INNER JOIN 
(
   SELECT ACCOUNT_ID,YEAR(DATE) AS TXN_YEAR,
   MONTH(DATE) AS TXN_MONTH,
   MAX(DATE) AS LATEST_TXN_DATE
   FROM TRANSACTION
   GROUP BY 1,2,3
   ORDER BY 1,2,3

) AS LTD ON TXN.ACCOUNT_ID = LTD.ACCOUNT_ID AND TXN.DATE = LTD.LATEST_TXN_DATE
WHERE TXN.TYPE = 'Credit' -- this is the assumptions am having : month end txn data is credit
ORDER BY TXN.ACCOUNT_ID,LTD.TXN_YEAR,LTD.TXN_MONTH;

SELECT * FROM ACC_LATEST_TXNS_WITH_BALANCE 
ORDER BY ACCOUNT_ID;

-- WHEN TAKING MAX DATE WE WILL HAVE TO ASSUME THAT THE CUSTOMER ACCOUNT IS ALSO BEING " CREDIT" TO GET THE CURRENT BALANCE FOR TRANSACTION  . 

SELECT ACCOUNT_ID , MAX(DATE)  FROM TRANSACTION
GROUP BY 1 
ORDER BY 1;


SELECT OPERATION , SUM(AMOUNT) FROM TRANSACTION 
GROUP BY 1
ORDER BY 2 DESC  ; 

SELECT ACCOUNT_ID,OPERATION , SUM(BALANCE) FROM TRANSACTION
GROUP BY 1 ,2 
ORDER BY 1 ;

select * from account;

SELECT * FROM CARD;

SELECT * FROM CLIENT   ;

SELECT * FROM DISP; 

SELECT DISTINCT TYPE FROM DISP;

SELECT * FROM DISTRICT LIMIT 1  ;

SELECT * FROM LOAN ;

SELECT COUNT(*) FROM ORDER1 ;

SELECT * FROM TRANSACTION ;

SELECT ACCOUNT_ID , COUNT(TRANS_ID) , AVG(AMOUNT) FROM TRANSACTION 
GROUP BY 1 
ORDER BY 2 DESC ;

--What are the most common types of accounts and how do they differ in terms of usage and profitability?

SELECT A.ACCOUNT_ID , A.ACCOUNT_TYPE , T.TYPE , SUM(T.AMOUNT) ,   FROM ACCOUNT A LEFT OUTER JOIN TRANSACTION T 
ON A.ACCOUNT_ID = T.ACCOUNT_ID 
GROUP BY 1 , 2,3
ORDER BY 1,2,3;

SELECT DISTINCT ACCOUNT_TYPE , COUNT(ACCOUNT_TYPE) FROM ACCOUNT 
GROUP BY 1 
ORDER BY 2 DESC ;FROM ACCOUNT ;
-- COMMON TYPE OF ACCOUNTS ARE SAVINGS ACCOUNT , SALARY ACCOUNT , NRI ACCOUNT .

--USAGE
SELECT DISTINCT FREQUENCY FROM ACCOUNT; -- THE FREQUENCY IS Monthly Issuance , Weekly Issuance,Issuance After a Transaction


SELECT ACCOUNT_TYPE , COUNT(ACCOUNT_TYPE) FROM ACCOUNT 
GROUP BY 1 
ORDER BY 2 DESC ;  -- SAVINGSACCOUNT - 1533 , NRI ACCOUNT 1522 , SALARY ACCOUNT - 1445

SELECT FREQUENCY , COUNT(FREQUENCY) FROM ACCOUNT 
GROUP BY 1 
ORDER BY 2 DESC ;-- MONTLY ISSU-4167 , WEEKLY 240 , ISS AFTER A TRANSC -93

SELECT A.ACCOUNT_TYPE , ROUND(AVG(T.BALANCE),2) FROM ACCOUNT A INNER JOIN TRANSACTION T 
ON A.ACCOUNT_ID = T.ACCOUNT_ID 
GROUP BY 1 
ORDER BY 2 DESC ; -- NRI-AVGBAL-39224.73 , SALACCOUNT-38100 , SAVINGS ACCOUNT 38047.85 


--Q.4]
--Which types of cards are most frequently used by the bank's clients and what is the
--overall profitability of the credit card business?

SELECT * FROM CARD ORDER BY CARD_ID ;

SELECT TYPE , COUNT(TYPE) FROM CARD 
GROUP BY 1 
ORDER BY 2 DESC ; -- type:gold - 659 . silver - 145 , diamond -88

-- total number of transaction made by each type of card 

SELECT C.TYPE , COUNT(T.TRANS_ID) AS TRANSACTION_VOLUME ,SUM(T.AMOUNT) AS TRANSACTION_AMOUNT   
FROM CARD C LEFT OUTER JOIN DISP D 
ON C.DISP_ID = D.DISP_ID 
LEFT OUTER JOIN ACCOUNT A 
ON D.ACCOUNT_ID = A.ACCOUNT_ID
LEFT OUTER JOIN TRANSACTION T 
ON A.ACCOUNT_ID = T.ACCOUNT_ID 
GROUP BY 1
ORDER BY 3 DESC ;

-- TRANSACTION DONE BY GOLD CARD  - 158604 , SILVER - 36078 , DIAMOND - 25573 
-- TOTAL TRANSACTION AMOUNT BY GOLD -  $1373.19 million.  , SILVER CARD -$276.28 million.DIAMOND CARD 233.53 millioN

SELECT AVG(AGE) FROM CLIENT;


SELECT C.TYPE ,YEAR(T.DATE) , COUNT(T.TRANS_ID) AS TRANSACTION_VOLUME ,SUM(T.AMOUNT) AS TRANSACTION_AMOUNT   
FROM CARD C LEFT OUTER JOIN DISP D 
ON C.DISP_ID = D.DISP_ID 
LEFT OUTER JOIN ACCOUNT A 
ON D.ACCOUNT_ID = A.ACCOUNT_ID
LEFT OUTER JOIN TRANSACTION T 
ON A.ACCOUNT_ID = T.ACCOUNT_ID 
GROUP BY 2 , 1
ORDER BY 2 DESC ;

SELECT C.TYPE , AVG(T.AMOUNT)   FROM CARD C LEFT OUTER JOIN DISP D 
ON C.DISP_ID = D.DISP_ID 
LEFT OUTER JOIN ACCOUNT A 
ON D.ACCOUNT_ID = A.ACCOUNT_ID
LEFT OUTER JOIN TRANSACTION T 
ON A.ACCOUNT_ID = T.ACCOUNT_ID 
GROUP BY  1
ORDER BY 2 DESC ;

SELECT C.TYPE , ROUND(SUM(T.AMOUNT)/COUNT(T.TRANS_ID)) FROM CARD C LEFT OUTER JOIN DISP D 
ON C.DISP_ID = D.DISP_ID 
LEFT OUTER JOIN ACCOUNT A 
ON D.ACCOUNT_ID = A.ACCOUNT_ID
LEFT OUTER JOIN TRANSACTION T 
ON A.ACCOUNT_ID = T.ACCOUNT_ID 
GROUP BY  1
ORDER BY 2 DESC ;-- AVG AMOUNT OF TRANSACTION DONE BY DIAMOND CARD IS $9131 , GOLD -$8657 , SILVER -$7657

SELECT * FROM LOAN ;

/*Q6]
What is the bankâ€™s loan portfolio and how does it vary across different purposes and
client segments?*/

SELECT  STATUS , COUNT(LOAN_ID) FROM LOAN
GROUP BY 1 
ORDER BY 2 DESC ;-- BANK HAS 403 CURRENTLY RUNNING CONTRANCTS FOR LOAN , 203 LOANS HAVE BEEN FINISHED  , 45 LOANS HAVE THEIR CLIENT IN DEBT AND 31 CLIENTS HAVE NOT PAID THEIR LOAN . 




SHOW DATABASES;

SHOW SCHEMAS;

select * from account ORDER BY ACCOUNT_ID ;

SELECT * FROM CARD;

SELECT * FROM CLIENT ;

SELECT * FROM DISP;

SELECT * FROM DISTRICT ;

SELECT * FROM LOAN ;

SELECT * FROM ORDER1 ;

SELECT * FROM TRANSACTION ORDER BY AMOUNT DESC ;


CREATE OR REPLACE TABLE BANKING_KPI AS
SELECT  ALWB.TXN_YEAR , ALWB.TXN_MONTH,T.BANK,A.ACCOUNT_TYPE,

COUNT(DISTINCT ALWB.ACCOUNT_ID) AS TOT_ACCOUNT, 
COUNT(DISTINCT T.TRANS_ID) AS TOT_TXNS,
COUNT(CASE WHEN T.TYPE = 'Credit' THEN 1 END) AS DEPOSIT_COUNT ,
COUNT(CASE WHEN T.TYPE = 'Withdrawal' THEN 1 END) AS WITHDRAWAL_COUNT,

SUM(ALWB.BALANCE) AS TOT_BALANCE,

ROUND((DEPOSIT_COUNT / TOT_TXNS) * 100,2)  AS DEPOSIT_PERC ,
ROUND((WITHDRAWAL_COUNT / TOT_TXNS) * 100,2) AS WITHDRAWAL_PERC ,
NVL(TOT_BALANCE / TOT_ACCOUNT,0) AS AVG_BALANCE,

ROUND(TOT_TXNS/TOT_ACCOUNT,0) AS TPA

FROM TRANSACTION AS T
INNER JOIN  ACC_LATEST_TXNS_WITH_BALANCE AS ALWB ON T.ACCOUNT_ID = ALWB.ACCOUNT_ID
LEFT OUTER JOIN  ACCOUNT AS A ON T.ACCOUNT_ID = A.ACCOUNT_ID
GROUP BY 1,2,3,4
ORDER BY 1,2,3,4;


SELECT * FROM BANKING_KPI;

-- CHECKING  IF THE BANK HAS BEEN PROFITABLE OR NOT 
SELECT BANK , SUM(AVG_BALANCE) , 
CASE WHEN SUM(AVG_BALANCE) > 350000000 THEN 'PROFITABLE BANK '
    ELSE 'BANK IN LOSS ' 
    END 
FROM BANKING_KPI 
GROUP BY 1
ORDER BY 2 DESC ;
--
select TXN_YEAR,COUNT(*) AS TOTAL
FROM BANKING_KPI
GROUP BY 1
ORDER BY 2 DESC;

SELECT * FROM BANKING_KPI
ORDER BY txn_year,BANK;

SELECT * FROM TRANSACTION
WHERE ACCOUNT_ID = 1
ORDER BY DATE;

SELECT * FROM BANKING_KPI
where txn_year =2019;

select TXN_YEAR AS TXN_YEAR,BANK,
SUM(AVG_BALANCE) AS TOT_AVG_BALANCE
from BANKING_KPI
GROUP BY 1,2
ORDER BY TOT_AVG_BALANCE DESC;

SELECT * FROM TRANSACTION
WHERE BANK = 'Sky Bank' AND ACCOUNT_ID = 7745
ORDER BY DATE ,BANK;

SELECT * FROM TRANSACTION
WHERE ACCOUNT_ID = 1 AND YEAR(DATE) = 2019 AND MONTH(DATE) = 7;




SELECT * FROM ACC_LATEST_TXNS_WITH_BALANCE ;

select * from loan;

SELECT DISTINCT STATUS,SUM(AMOUNT)
FROM LOAN
GROUP BY 1
ORDER BY 1;



----------------------------------------------------------------------------------------------

--NVL(TOT_DEPOSIT_AMOUNT,0)-NVL(TOT_WITHDRAWAL_AMOUNT,0) AS TOT_BALANCE,
NVL((TOT_DEPOSIT_AMOUNT/DEPOSIT_COUNT),0) AS AVG_DEPOSIT_AMOUNT, 
NVL((TOT_WITHDRAWAL_AMOUNT/WITHDRAWAL_COUNT),0) AS AVG_WITHDRAWAL_AMOUNT;
--NVL((TOT_BALANCE / TOT_ACCOUNT),0) AS AVG_BALANCE;


SELECT * FROM ORDER1 ;

SELECT * FROM DISTRICT;

SELECT DISTINCT REGION FROM DISTRICT;

SELECT DISTINCT DISTRICT_NAME FROM DISTRICT ;



--CHECKING IF THE BANK HAS BEEN PROFITABLE OR NOT . 

CREATE VIEW PROFITABILITY AS 
SELECT BANK , SUM(BALANCE) AS TOTAL_BALANCE 
FROM TRANSACTION 
GROUP BY 1 
ORDER BY 2 DESC ;

CREATE TABLE PROFIT_LOS AS 
SELECT * FROM PROFITABILITY ;

ALTER TABLE PROFIT_LOS 
ADD COLUMN STATUS VARCHAR(50);


UPDATE PROFIT_LOS 
SET STATUS = CASE WHEN TOTAL_BALANCE > 3000000 THEN 'PROFITABLE'
            ELSE 'LOSS'
            END ;

SELECT * FROM PROFIT_LOS;

SELECT * FROM DISP;

SELECT * FROM ORDER1;

SELECT DISTINCT BANK_TO FROM ORDER1;

SELECT * FROM TRANSACTION;

SELECT DISTINCT OPERATION FROM TRANSACTION;

SELECT DISTINCT PURPOSE FROM TRANSACTION;

SELECT * FROM ACCOUNT ;

SELECT OPERATION , SUM(AMOUNT)  FROM TRANSACTION 
GROUP BY 1 
ORDER BY 2 DESC;
